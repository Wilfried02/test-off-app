self.onmessage=async e=>{if("__FRONTEND_NAV_CACHE__"===e.data.type){let t=e.data.url,a=await caches.open("pages");if(!await a.match(t,{ignoreSearch:!0})){let s=await fetch(t);if(s.ok){let c=s.clone();if(a.put(t,c),e.data.shouldCacheAggressively&&s.headers.get("Content-Type")?.includes("text/html"))try{let e=await s.text(),t=[],a=await caches.open("static-style-assets"),c=await caches.open("next-static-js-assets"),l=await caches.open("static-js-assets");for(let[s,c]of e.matchAll(/<link.*?href=['"](.*?)['"].*?>/g))/rel=['"]stylesheet['"]/.test(s)&&t.push(a.match(c).then(e=>e?Promise.resolve():a.add(c)));for(let[,a]of e.matchAll(/<script.*?src=['"](.*?)['"].*?>/g)){let e=/\/_next\/static.+\.js$/i.test(a)?c:l;t.push(e.match(a).then(t=>t?Promise.resolve():e.add(a)))}return await Promise.all(t)}catch{}}}}return Promise.resolve()};